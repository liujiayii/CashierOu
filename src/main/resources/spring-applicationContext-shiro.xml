<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
    xsi:schemaLocation="http://www.springframework.org/schema/beans 
        http://www.springframework.org/schema/beans/spring-beans-3.2.xsd 
        http://www.springframework.org/schema/mvc 
        http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd 
        http://www.springframework.org/schema/context 
        http://www.springframework.org/schema/context/spring-context-3.2.xsd 
        http://www.springframework.org/schema/aop 
        http://www.springframework.org/schema/aop/spring-aop-3.2.xsd 
        http://www.springframework.org/schema/tx 
        http://www.springframework.org/schema/tx/spring-tx-3.2.xsd ">

<!-- web.xml中shiro的filter对应的bean -->
<!-- Shiro 的Web过滤器 -->
    <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
        <property name="securityManager" ref="securityManager" />
        <!-- loginUrl认证提交地址，如果没有认证将会请求此地址进行认证，请求此地址将由formAuthenticationFilter进行表单认证 -->
        <property name="loginUrl" value="/index.jsp" />
        <!-- 认证成功统一跳转到first.action，建议不配置，shiro认证成功自动到上一个请求路径 -->
        <property name="successUrl" value="/index.action"/>
        <!-- 通过unauthorizedUrl指定没有权限操作时跳转页面-->
        <property name="unauthorizedUrl" value="/unauthorized.jsp" />
        <property name="filters">
            <map>
                <!--退出过滤器-->
                <entry key="logout" value-ref="systemLogoutFilter" />
            </map>
        </property>
        <!-- 过虑器链定义，从上向下顺序执行，一般将/**放在最下边 -->
        <property name="filterChainDefinitions">
            <value>
                <!-- 对静态资源设置匿名访问 -->
                /common/** = anon
                /public/** = anon
                /views/** = anon
                
                
                <!-- 验证码，可匿名访问 -->
                /login.jsp  = anon
                /login.action = anon
                /loginForAn.action = anon
                /logout.action = logout
                /validatecode.jsp = anon
                
                <!-- 设置一些路径登陆即可访问 -->
                /deskCheckOut.action = authc
                /calculatePreferentialPrice.action = authc
                /orderShelve.action = authc
                /listOrderShelve.action = authc
                /saveCreditsExchangeRecord.action = authc
                /listCategoryAndDesk.action = authc
                /listDeskByState.action = authc
                /dmArealist.action = authc
                /dmAreatwolist.action = authc
                /shopID.action = authc
                /listUserName.action=authc
                /listPriduct.action = authc
                /MumberAllEFlist.action = authc
                /saveRechargeConsumeRecord.action = authc
                /selectAllProductByState.action = authc
                /lectAllProductTwo.action = authc
                /listPriduct.action = authc
                /listpurchasecommodities.action = authc
                /listAllMaterialTypes.action = authc
                /saveReserve.action = authc
                /updateReserve.action = authc
                /deleteReserve.action = authc
                /showReserves.action = authc
                /getGeneralScopeById.action = authc
                /getRewardPunishmentMoneyById.action = authc
                /shopID.action = authc
                /hangkong.action = authc
                /listAllSpecificTaste.action = authc
                /showReserves.action = authc
                /showReserve.action = authc
                /updateSupplierByCanUse.action = authc
                /supplier.action = authc
                /listPurchaseMaterials.action = authc
                /listRecord.action = authc
                /listMemberByNumberOrPhone.action = authc
                /addMember.action = authc
                /changeMember.action = authc
                /listMemberByNumberOrPhone.action = authc
                /listAllBonus.action = authc
                
                /tablesManagement.jsp = authc
                /membersManagement.jsp = authc
                /dataManage.jsp = authc
                /preferentialActivityManage.jsp = authc
                /storeManage.jsp = authc
                /cashierManage.jsp = authc
                /duringmonthManage.jsp = authc
                /storesalesManage.jsp = authc
                <!-- 请求 logout.action地址，shiro去清除session-->
                <!--商品查询需要商品查询权限 ，取消url拦截配置，使用注解授权方式 -->
                <!-- /items/queryItems.action = perms[item:query]
                /items/editItems.action = perms[item:edit] -->
                <!-- 配置记住我或认证通过可以访问的地址 -->
                <!-- /totypesslist_ht.* = perms[totypesslist_ht]
                /totypesslist_ht.* = roles[商品管理员] -->
                <!-- /** = authc 所有url都必须认证通过才可以访问-->
                <!-- /** = authc -->
                <!-- /** = anon所有url都可以匿名访问 -->
                <!-- /*.action = authc -->
            </value>
        </property>
    </bean>

    <!-- securityManager安全管理器 -->
    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
            <property name="realm" ref="customRealm" />
    </bean>

    <bean id="customRealm" class="com.cashier.controller.CustomRealm">
        <property name="credentialsMatcher">
            <bean class="org.apache.shiro.authc.credential.HashedCredentialsMatcher">
                <property name="hashAlgorithmName" value="MD5"></property> <!-- 加密算法的名称 -->
                <property name="hashIterations" value="1"></property> <!-- 配置加密的次数 -->
            </bean>
        </property>
    </bean>


     <!-- <bean id="md5Matcher" class="org.apache.shiro.authc.credential.Md5CredentialsMatcher"></bean>   
    <bean id="myRealm" class="com.demo.mongodb.realm.MongodbRealm">
    <property name="userDao" ref="userDao"></property>
    <property name="resourcePath" value="classpath:shiro.ini"/> 
    <property name="authorizationCacheName" value="shiro.authorizationCache"/>
    <property name="credentialsMatcher" ref="md5Matcher"></property>
    
    </bean>
     -->

    <!-- 开启aop，对类代理 -->
    <aop:config proxy-target-class="true"></aop:config>
    <!-- 开启shiro注解支持 -->
    <bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
        <property name="securityManager" ref="securityManager" />
    </bean>

    

</beans>